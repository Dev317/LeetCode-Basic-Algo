/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if(root == null) {
            return false;
        }
        
        Queue<TreeNode> nodeQ = new ArrayDeque<>();
        
        nodeQ.add(root);
        
        while(!nodeQ.isEmpty()) {
            TreeNode curr = nodeQ.poll();
            
            if(curr.left == null && curr.right == null) {
                if (curr.val == targetSum) {
                    return true;
                }
            }
                
            if(curr.left != null) {
                curr.left.val += curr.val; 
                nodeQ.add(curr.left);
            }
                
            if (curr.right != null) {
                curr.right.val += curr.val;
                nodeQ.add(curr.right);
            }
        } return false;
        
    }
}
