/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        if (nums.length == 1) {
            return new TreeNode(nums[0]);
        }
        return util(nums, 0 , nums.length - 1);
        
    
    }
    
    public TreeNode util (int[] arr, int startIndex, int endIndex) {
        if (startIndex > endIndex) {
            return null;
        }
        
        int mid = (startIndex + endIndex)/2;
        
        TreeNode node = new TreeNode(arr[mid]);
        
        node.left = util(arr,startIndex,mid - 1);
        node.right = util(arr,mid + 1,endIndex);
        return node;
    }
}
